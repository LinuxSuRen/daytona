/*
Daytona Server API

Daytona Server API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the GithubOrganization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GithubOrganization{}

// GithubOrganization struct for GithubOrganization
type GithubOrganization struct {
	AvatarUrl         *string     `json:"avatar_url,omitempty"`
	BillingEmail      *string     `json:"billing_email,omitempty"`
	Blog              *string     `json:"blog,omitempty"`
	Collaborators     *int32      `json:"collaborators,omitempty"`
	Company           *string     `json:"company,omitempty"`
	CreatedAt         *string     `json:"created_at,omitempty"`
	Description       *string     `json:"description,omitempty"`
	DiskUsage         *int32      `json:"disk_usage,omitempty"`
	Email             *string     `json:"email,omitempty"`
	EventsUrl         *string     `json:"events_url,omitempty"`
	Followers         *int32      `json:"followers,omitempty"`
	Following         *int32      `json:"following,omitempty"`
	HooksUrl          *string     `json:"hooks_url,omitempty"`
	HtmlUrl           *string     `json:"html_url,omitempty"`
	Id                *int32      `json:"id,omitempty"`
	IssuesUrl         *string     `json:"issues_url,omitempty"`
	Location          *string     `json:"location,omitempty"`
	Login             *string     `json:"login,omitempty"`
	MembersUrl        *string     `json:"members_url,omitempty"`
	Name              *string     `json:"name,omitempty"`
	NodeId            *string     `json:"node_id,omitempty"`
	OwnedPrivateRepos *int32      `json:"owned_private_repos,omitempty"`
	Plan              *GithubPlan `json:"plan,omitempty"`
	PrivateGists      *int32      `json:"private_gists,omitempty"`
	PublicGists       *int32      `json:"public_gists,omitempty"`
	PublicMembersUrl  *string     `json:"public_members_url,omitempty"`
	PublicRepos       *int32      `json:"public_repos,omitempty"`
	ReposUrl          *string     `json:"repos_url,omitempty"`
	TotalPrivateRepos *int32      `json:"total_private_repos,omitempty"`
	Type              *string     `json:"type,omitempty"`
	UpdatedAt         *string     `json:"updated_at,omitempty"`
	// API URLs
	Url *string `json:"url,omitempty"`
}

// NewGithubOrganization instantiates a new GithubOrganization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubOrganization() *GithubOrganization {
	this := GithubOrganization{}
	return &this
}

// NewGithubOrganizationWithDefaults instantiates a new GithubOrganization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubOrganizationWithDefaults() *GithubOrganization {
	this := GithubOrganization{}
	return &this
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *GithubOrganization) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl) {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetAvatarUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarUrl) {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *GithubOrganization) HasAvatarUrl() bool {
	if o != nil && !IsNil(o.AvatarUrl) {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *GithubOrganization) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetBillingEmail returns the BillingEmail field value if set, zero value otherwise.
func (o *GithubOrganization) GetBillingEmail() string {
	if o == nil || IsNil(o.BillingEmail) {
		var ret string
		return ret
	}
	return *o.BillingEmail
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetBillingEmailOk() (*string, bool) {
	if o == nil || IsNil(o.BillingEmail) {
		return nil, false
	}
	return o.BillingEmail, true
}

// HasBillingEmail returns a boolean if a field has been set.
func (o *GithubOrganization) HasBillingEmail() bool {
	if o != nil && !IsNil(o.BillingEmail) {
		return true
	}

	return false
}

// SetBillingEmail gets a reference to the given string and assigns it to the BillingEmail field.
func (o *GithubOrganization) SetBillingEmail(v string) {
	o.BillingEmail = &v
}

// GetBlog returns the Blog field value if set, zero value otherwise.
func (o *GithubOrganization) GetBlog() string {
	if o == nil || IsNil(o.Blog) {
		var ret string
		return ret
	}
	return *o.Blog
}

// GetBlogOk returns a tuple with the Blog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetBlogOk() (*string, bool) {
	if o == nil || IsNil(o.Blog) {
		return nil, false
	}
	return o.Blog, true
}

// HasBlog returns a boolean if a field has been set.
func (o *GithubOrganization) HasBlog() bool {
	if o != nil && !IsNil(o.Blog) {
		return true
	}

	return false
}

// SetBlog gets a reference to the given string and assigns it to the Blog field.
func (o *GithubOrganization) SetBlog(v string) {
	o.Blog = &v
}

// GetCollaborators returns the Collaborators field value if set, zero value otherwise.
func (o *GithubOrganization) GetCollaborators() int32 {
	if o == nil || IsNil(o.Collaborators) {
		var ret int32
		return ret
	}
	return *o.Collaborators
}

// GetCollaboratorsOk returns a tuple with the Collaborators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetCollaboratorsOk() (*int32, bool) {
	if o == nil || IsNil(o.Collaborators) {
		return nil, false
	}
	return o.Collaborators, true
}

// HasCollaborators returns a boolean if a field has been set.
func (o *GithubOrganization) HasCollaborators() bool {
	if o != nil && !IsNil(o.Collaborators) {
		return true
	}

	return false
}

// SetCollaborators gets a reference to the given int32 and assigns it to the Collaborators field.
func (o *GithubOrganization) SetCollaborators(v int32) {
	o.Collaborators = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *GithubOrganization) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *GithubOrganization) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *GithubOrganization) SetCompany(v string) {
	o.Company = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GithubOrganization) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GithubOrganization) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GithubOrganization) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GithubOrganization) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GithubOrganization) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GithubOrganization) SetDescription(v string) {
	o.Description = &v
}

// GetDiskUsage returns the DiskUsage field value if set, zero value otherwise.
func (o *GithubOrganization) GetDiskUsage() int32 {
	if o == nil || IsNil(o.DiskUsage) {
		var ret int32
		return ret
	}
	return *o.DiskUsage
}

// GetDiskUsageOk returns a tuple with the DiskUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetDiskUsageOk() (*int32, bool) {
	if o == nil || IsNil(o.DiskUsage) {
		return nil, false
	}
	return o.DiskUsage, true
}

// HasDiskUsage returns a boolean if a field has been set.
func (o *GithubOrganization) HasDiskUsage() bool {
	if o != nil && !IsNil(o.DiskUsage) {
		return true
	}

	return false
}

// SetDiskUsage gets a reference to the given int32 and assigns it to the DiskUsage field.
func (o *GithubOrganization) SetDiskUsage(v int32) {
	o.DiskUsage = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GithubOrganization) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GithubOrganization) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GithubOrganization) SetEmail(v string) {
	o.Email = &v
}

// GetEventsUrl returns the EventsUrl field value if set, zero value otherwise.
func (o *GithubOrganization) GetEventsUrl() string {
	if o == nil || IsNil(o.EventsUrl) {
		var ret string
		return ret
	}
	return *o.EventsUrl
}

// GetEventsUrlOk returns a tuple with the EventsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetEventsUrlOk() (*string, bool) {
	if o == nil || IsNil(o.EventsUrl) {
		return nil, false
	}
	return o.EventsUrl, true
}

// HasEventsUrl returns a boolean if a field has been set.
func (o *GithubOrganization) HasEventsUrl() bool {
	if o != nil && !IsNil(o.EventsUrl) {
		return true
	}

	return false
}

// SetEventsUrl gets a reference to the given string and assigns it to the EventsUrl field.
func (o *GithubOrganization) SetEventsUrl(v string) {
	o.EventsUrl = &v
}

// GetFollowers returns the Followers field value if set, zero value otherwise.
func (o *GithubOrganization) GetFollowers() int32 {
	if o == nil || IsNil(o.Followers) {
		var ret int32
		return ret
	}
	return *o.Followers
}

// GetFollowersOk returns a tuple with the Followers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetFollowersOk() (*int32, bool) {
	if o == nil || IsNil(o.Followers) {
		return nil, false
	}
	return o.Followers, true
}

// HasFollowers returns a boolean if a field has been set.
func (o *GithubOrganization) HasFollowers() bool {
	if o != nil && !IsNil(o.Followers) {
		return true
	}

	return false
}

// SetFollowers gets a reference to the given int32 and assigns it to the Followers field.
func (o *GithubOrganization) SetFollowers(v int32) {
	o.Followers = &v
}

// GetFollowing returns the Following field value if set, zero value otherwise.
func (o *GithubOrganization) GetFollowing() int32 {
	if o == nil || IsNil(o.Following) {
		var ret int32
		return ret
	}
	return *o.Following
}

// GetFollowingOk returns a tuple with the Following field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetFollowingOk() (*int32, bool) {
	if o == nil || IsNil(o.Following) {
		return nil, false
	}
	return o.Following, true
}

// HasFollowing returns a boolean if a field has been set.
func (o *GithubOrganization) HasFollowing() bool {
	if o != nil && !IsNil(o.Following) {
		return true
	}

	return false
}

// SetFollowing gets a reference to the given int32 and assigns it to the Following field.
func (o *GithubOrganization) SetFollowing(v int32) {
	o.Following = &v
}

// GetHooksUrl returns the HooksUrl field value if set, zero value otherwise.
func (o *GithubOrganization) GetHooksUrl() string {
	if o == nil || IsNil(o.HooksUrl) {
		var ret string
		return ret
	}
	return *o.HooksUrl
}

// GetHooksUrlOk returns a tuple with the HooksUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetHooksUrlOk() (*string, bool) {
	if o == nil || IsNil(o.HooksUrl) {
		return nil, false
	}
	return o.HooksUrl, true
}

// HasHooksUrl returns a boolean if a field has been set.
func (o *GithubOrganization) HasHooksUrl() bool {
	if o != nil && !IsNil(o.HooksUrl) {
		return true
	}

	return false
}

// SetHooksUrl gets a reference to the given string and assigns it to the HooksUrl field.
func (o *GithubOrganization) SetHooksUrl(v string) {
	o.HooksUrl = &v
}

// GetHtmlUrl returns the HtmlUrl field value if set, zero value otherwise.
func (o *GithubOrganization) GetHtmlUrl() string {
	if o == nil || IsNil(o.HtmlUrl) {
		var ret string
		return ret
	}
	return *o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetHtmlUrlOk() (*string, bool) {
	if o == nil || IsNil(o.HtmlUrl) {
		return nil, false
	}
	return o.HtmlUrl, true
}

// HasHtmlUrl returns a boolean if a field has been set.
func (o *GithubOrganization) HasHtmlUrl() bool {
	if o != nil && !IsNil(o.HtmlUrl) {
		return true
	}

	return false
}

// SetHtmlUrl gets a reference to the given string and assigns it to the HtmlUrl field.
func (o *GithubOrganization) SetHtmlUrl(v string) {
	o.HtmlUrl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GithubOrganization) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GithubOrganization) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GithubOrganization) SetId(v int32) {
	o.Id = &v
}

// GetIssuesUrl returns the IssuesUrl field value if set, zero value otherwise.
func (o *GithubOrganization) GetIssuesUrl() string {
	if o == nil || IsNil(o.IssuesUrl) {
		var ret string
		return ret
	}
	return *o.IssuesUrl
}

// GetIssuesUrlOk returns a tuple with the IssuesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetIssuesUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IssuesUrl) {
		return nil, false
	}
	return o.IssuesUrl, true
}

// HasIssuesUrl returns a boolean if a field has been set.
func (o *GithubOrganization) HasIssuesUrl() bool {
	if o != nil && !IsNil(o.IssuesUrl) {
		return true
	}

	return false
}

// SetIssuesUrl gets a reference to the given string and assigns it to the IssuesUrl field.
func (o *GithubOrganization) SetIssuesUrl(v string) {
	o.IssuesUrl = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *GithubOrganization) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *GithubOrganization) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *GithubOrganization) SetLocation(v string) {
	o.Location = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *GithubOrganization) GetLogin() string {
	if o == nil || IsNil(o.Login) {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetLoginOk() (*string, bool) {
	if o == nil || IsNil(o.Login) {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *GithubOrganization) HasLogin() bool {
	if o != nil && !IsNil(o.Login) {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *GithubOrganization) SetLogin(v string) {
	o.Login = &v
}

// GetMembersUrl returns the MembersUrl field value if set, zero value otherwise.
func (o *GithubOrganization) GetMembersUrl() string {
	if o == nil || IsNil(o.MembersUrl) {
		var ret string
		return ret
	}
	return *o.MembersUrl
}

// GetMembersUrlOk returns a tuple with the MembersUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetMembersUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MembersUrl) {
		return nil, false
	}
	return o.MembersUrl, true
}

// HasMembersUrl returns a boolean if a field has been set.
func (o *GithubOrganization) HasMembersUrl() bool {
	if o != nil && !IsNil(o.MembersUrl) {
		return true
	}

	return false
}

// SetMembersUrl gets a reference to the given string and assigns it to the MembersUrl field.
func (o *GithubOrganization) SetMembersUrl(v string) {
	o.MembersUrl = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GithubOrganization) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GithubOrganization) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GithubOrganization) SetName(v string) {
	o.Name = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *GithubOrganization) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *GithubOrganization) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *GithubOrganization) SetNodeId(v string) {
	o.NodeId = &v
}

// GetOwnedPrivateRepos returns the OwnedPrivateRepos field value if set, zero value otherwise.
func (o *GithubOrganization) GetOwnedPrivateRepos() int32 {
	if o == nil || IsNil(o.OwnedPrivateRepos) {
		var ret int32
		return ret
	}
	return *o.OwnedPrivateRepos
}

// GetOwnedPrivateReposOk returns a tuple with the OwnedPrivateRepos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetOwnedPrivateReposOk() (*int32, bool) {
	if o == nil || IsNil(o.OwnedPrivateRepos) {
		return nil, false
	}
	return o.OwnedPrivateRepos, true
}

// HasOwnedPrivateRepos returns a boolean if a field has been set.
func (o *GithubOrganization) HasOwnedPrivateRepos() bool {
	if o != nil && !IsNil(o.OwnedPrivateRepos) {
		return true
	}

	return false
}

// SetOwnedPrivateRepos gets a reference to the given int32 and assigns it to the OwnedPrivateRepos field.
func (o *GithubOrganization) SetOwnedPrivateRepos(v int32) {
	o.OwnedPrivateRepos = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *GithubOrganization) GetPlan() GithubPlan {
	if o == nil || IsNil(o.Plan) {
		var ret GithubPlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetPlanOk() (*GithubPlan, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *GithubOrganization) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given GithubPlan and assigns it to the Plan field.
func (o *GithubOrganization) SetPlan(v GithubPlan) {
	o.Plan = &v
}

// GetPrivateGists returns the PrivateGists field value if set, zero value otherwise.
func (o *GithubOrganization) GetPrivateGists() int32 {
	if o == nil || IsNil(o.PrivateGists) {
		var ret int32
		return ret
	}
	return *o.PrivateGists
}

// GetPrivateGistsOk returns a tuple with the PrivateGists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetPrivateGistsOk() (*int32, bool) {
	if o == nil || IsNil(o.PrivateGists) {
		return nil, false
	}
	return o.PrivateGists, true
}

// HasPrivateGists returns a boolean if a field has been set.
func (o *GithubOrganization) HasPrivateGists() bool {
	if o != nil && !IsNil(o.PrivateGists) {
		return true
	}

	return false
}

// SetPrivateGists gets a reference to the given int32 and assigns it to the PrivateGists field.
func (o *GithubOrganization) SetPrivateGists(v int32) {
	o.PrivateGists = &v
}

// GetPublicGists returns the PublicGists field value if set, zero value otherwise.
func (o *GithubOrganization) GetPublicGists() int32 {
	if o == nil || IsNil(o.PublicGists) {
		var ret int32
		return ret
	}
	return *o.PublicGists
}

// GetPublicGistsOk returns a tuple with the PublicGists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetPublicGistsOk() (*int32, bool) {
	if o == nil || IsNil(o.PublicGists) {
		return nil, false
	}
	return o.PublicGists, true
}

// HasPublicGists returns a boolean if a field has been set.
func (o *GithubOrganization) HasPublicGists() bool {
	if o != nil && !IsNil(o.PublicGists) {
		return true
	}

	return false
}

// SetPublicGists gets a reference to the given int32 and assigns it to the PublicGists field.
func (o *GithubOrganization) SetPublicGists(v int32) {
	o.PublicGists = &v
}

// GetPublicMembersUrl returns the PublicMembersUrl field value if set, zero value otherwise.
func (o *GithubOrganization) GetPublicMembersUrl() string {
	if o == nil || IsNil(o.PublicMembersUrl) {
		var ret string
		return ret
	}
	return *o.PublicMembersUrl
}

// GetPublicMembersUrlOk returns a tuple with the PublicMembersUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetPublicMembersUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PublicMembersUrl) {
		return nil, false
	}
	return o.PublicMembersUrl, true
}

// HasPublicMembersUrl returns a boolean if a field has been set.
func (o *GithubOrganization) HasPublicMembersUrl() bool {
	if o != nil && !IsNil(o.PublicMembersUrl) {
		return true
	}

	return false
}

// SetPublicMembersUrl gets a reference to the given string and assigns it to the PublicMembersUrl field.
func (o *GithubOrganization) SetPublicMembersUrl(v string) {
	o.PublicMembersUrl = &v
}

// GetPublicRepos returns the PublicRepos field value if set, zero value otherwise.
func (o *GithubOrganization) GetPublicRepos() int32 {
	if o == nil || IsNil(o.PublicRepos) {
		var ret int32
		return ret
	}
	return *o.PublicRepos
}

// GetPublicReposOk returns a tuple with the PublicRepos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetPublicReposOk() (*int32, bool) {
	if o == nil || IsNil(o.PublicRepos) {
		return nil, false
	}
	return o.PublicRepos, true
}

// HasPublicRepos returns a boolean if a field has been set.
func (o *GithubOrganization) HasPublicRepos() bool {
	if o != nil && !IsNil(o.PublicRepos) {
		return true
	}

	return false
}

// SetPublicRepos gets a reference to the given int32 and assigns it to the PublicRepos field.
func (o *GithubOrganization) SetPublicRepos(v int32) {
	o.PublicRepos = &v
}

// GetReposUrl returns the ReposUrl field value if set, zero value otherwise.
func (o *GithubOrganization) GetReposUrl() string {
	if o == nil || IsNil(o.ReposUrl) {
		var ret string
		return ret
	}
	return *o.ReposUrl
}

// GetReposUrlOk returns a tuple with the ReposUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetReposUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReposUrl) {
		return nil, false
	}
	return o.ReposUrl, true
}

// HasReposUrl returns a boolean if a field has been set.
func (o *GithubOrganization) HasReposUrl() bool {
	if o != nil && !IsNil(o.ReposUrl) {
		return true
	}

	return false
}

// SetReposUrl gets a reference to the given string and assigns it to the ReposUrl field.
func (o *GithubOrganization) SetReposUrl(v string) {
	o.ReposUrl = &v
}

// GetTotalPrivateRepos returns the TotalPrivateRepos field value if set, zero value otherwise.
func (o *GithubOrganization) GetTotalPrivateRepos() int32 {
	if o == nil || IsNil(o.TotalPrivateRepos) {
		var ret int32
		return ret
	}
	return *o.TotalPrivateRepos
}

// GetTotalPrivateReposOk returns a tuple with the TotalPrivateRepos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetTotalPrivateReposOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPrivateRepos) {
		return nil, false
	}
	return o.TotalPrivateRepos, true
}

// HasTotalPrivateRepos returns a boolean if a field has been set.
func (o *GithubOrganization) HasTotalPrivateRepos() bool {
	if o != nil && !IsNil(o.TotalPrivateRepos) {
		return true
	}

	return false
}

// SetTotalPrivateRepos gets a reference to the given int32 and assigns it to the TotalPrivateRepos field.
func (o *GithubOrganization) SetTotalPrivateRepos(v int32) {
	o.TotalPrivateRepos = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GithubOrganization) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GithubOrganization) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GithubOrganization) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GithubOrganization) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GithubOrganization) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GithubOrganization) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GithubOrganization) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubOrganization) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GithubOrganization) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GithubOrganization) SetUrl(v string) {
	o.Url = &v
}

func (o GithubOrganization) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GithubOrganization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvatarUrl) {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	if !IsNil(o.BillingEmail) {
		toSerialize["billing_email"] = o.BillingEmail
	}
	if !IsNil(o.Blog) {
		toSerialize["blog"] = o.Blog
	}
	if !IsNil(o.Collaborators) {
		toSerialize["collaborators"] = o.Collaborators
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DiskUsage) {
		toSerialize["disk_usage"] = o.DiskUsage
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.EventsUrl) {
		toSerialize["events_url"] = o.EventsUrl
	}
	if !IsNil(o.Followers) {
		toSerialize["followers"] = o.Followers
	}
	if !IsNil(o.Following) {
		toSerialize["following"] = o.Following
	}
	if !IsNil(o.HooksUrl) {
		toSerialize["hooks_url"] = o.HooksUrl
	}
	if !IsNil(o.HtmlUrl) {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IssuesUrl) {
		toSerialize["issues_url"] = o.IssuesUrl
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Login) {
		toSerialize["login"] = o.Login
	}
	if !IsNil(o.MembersUrl) {
		toSerialize["members_url"] = o.MembersUrl
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.OwnedPrivateRepos) {
		toSerialize["owned_private_repos"] = o.OwnedPrivateRepos
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.PrivateGists) {
		toSerialize["private_gists"] = o.PrivateGists
	}
	if !IsNil(o.PublicGists) {
		toSerialize["public_gists"] = o.PublicGists
	}
	if !IsNil(o.PublicMembersUrl) {
		toSerialize["public_members_url"] = o.PublicMembersUrl
	}
	if !IsNil(o.PublicRepos) {
		toSerialize["public_repos"] = o.PublicRepos
	}
	if !IsNil(o.ReposUrl) {
		toSerialize["repos_url"] = o.ReposUrl
	}
	if !IsNil(o.TotalPrivateRepos) {
		toSerialize["total_private_repos"] = o.TotalPrivateRepos
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableGithubOrganization struct {
	value *GithubOrganization
	isSet bool
}

func (v NullableGithubOrganization) Get() *GithubOrganization {
	return v.value
}

func (v *NullableGithubOrganization) Set(val *GithubOrganization) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubOrganization(val *GithubOrganization) *NullableGithubOrganization {
	return &NullableGithubOrganization{value: val, isSet: true}
}

func (v NullableGithubOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
